name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Versión semántica (ej: v1.0.0)"
        required: true
        default: "v0.1.0"
      release_title:
        description: "Título del release"
        required: false
      release_notes:
        description: "Notas del release"
        required: false

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12.6'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Verify __init__.py files
      run: |
        ls
        ls src/
        ls src/presentation/
        ls src/presentation/views/

    - name: Package app with Flet Pack
      run: |
          pyinstaller launcher.py --name=Revistook_App --onefile --windowed `
            --add-data "src;src" `
            --hidden-import=presentation `
            --hidden-import=presentation.views `
            --hidden-import=presentation.main_view `
            --hidden-import=domain `
            --hidden-import=infrastructure `
            --hidden-import=application

    - name: Run generated executable to test
      run: |
        echo "Testing the executable..."
        .\dist\Revistook_App.exe > execution_log.txt 2>&1 || (echo "❌ The executable crashed! Log: "type execution_log.txt exit 1)
        echo "✅ Executable ran successfully!"

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: flet-windows-executable
        path: dist/
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: ${{ github.event.inputs.release_title || format('Release {0}', github.event.inputs.version) }}
        body: ${{ github.event.inputs.release_notes }}
        files: dist/Revistook_App.exe        
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
